/*
    son elementos que se activan al momento en el usuario interactua con el contenido marcado por estos
    
    es aplicable a cualquier elemento sin importar la jerarquia que posea 

    no es obligatorio que haya un selector para poder usarlo 
*/
/* 
->dinamicos: estas son aplicados cuando el usuario realiza cierta accion sobre el elemento */

.link:link{ /* aplica los estilos de abajo a los enlaces no visitados */
    color: red;
}

.link:visited{ /* aplica los efectos de abajo a los enlaces ya visitados */
    color: chartreuse;
}

.link:active{ 
    color:cyan;
    background: red;
}

.button{
    text-decoration: none;
    color: white;
    background: red;
    display: inline-block;
    padding: 0.5em;
    border-radius: 10px;

}

.button:active{ /* aplica los estilos cuando el enlace esta siendo usado */
    transform: scale(0.9);
}

.title:hover{
    color: blueviolet;
}

.button:hover{ /* aplica los estilos a los elementos cuando el raton esta sobre este */  
    color: red;
    background: white;
    border: 1px solid;
    border-radius: 10px;
}

.input:focus{ /* aplica los estilos cuando el elemento se selecciona o esta seleccionado de manera continua */
    background: cadetblue ;
    color: white;
}

.text{
    margin-top: 900px;
    margin-bottom: 900px;
    background: red;
}

.menu{
    display: block;
    padding: 1.4em;
    background: lightblue;
    text-decoration: none;
    text-align: center;
    position: fixed;
    width: 100%;
    top: 0;
}

.span{
    display: block;
}

/* 
->de target u objetivo(enlaces que te llevan a cualquier parte de la pagina ): los estilos se aplicaran al target */

.text:target{/* aplica los estilos al elemento si es fijado como un objetivo */
    background: white; 
    padding-top: 75px;
    color: green;
}

/* ->de lenguaje: aplica los estilos a los elementos que cumplan que tengan el lenguaje especificado */

span:lang(es){
    color: red;
}

span:lang(en){
    color: lightseagreen;
}

.input2,.label{
    display: block;
}
/* 
los de tipo formulario son aplicados a los campos de un formulario dependiendo de su estado */

.input2:enabled{ /* aplica los estilos pertenecientes a los campos que esten habilitados  */
    background: red;
}

.input2:disabled{ /* aplica los estilos a los camopos que esten deshabilitados */
    background: yellow ;
}

.input2:checked + label{/*  aplicado a los checkbox cuando estan seleccionados */
    font-size: 2em;
}

.input2:in-range{ /* aplicado a los campos numericos en los cuales si esta dentro del rango permitira la aplicacion de los estilos  */
    background: brown;
}

.input2:out-of-range{ /* aplica los efectos cuando el campo numerico esta fuera del rango */
    background: cornflowerblue;
}

.input2:valid{ /* aplica los estilos cuando el contenido del campo esta dentro del formato solicitado  */
    background: pink;
}

.input2:invalid{ /* aplica los efectos si el formato del contenido no es el solicitado */
    background: darkkhaki;
}

/* 
los de estructura son aquellos relacionados a la estructuras del html */

/* :root{ esta pseudoclase es semejante a usar la etiqueta html solo que con una mayor especifidad 
    background: yellow;
} */

.parrafo{
    padding: 0.5em;
    background: lightblue;
}

.parrafo:empty{ /* aplica los estilos cuando el elemento no tiene ningun contenido */
     /* padding: 0; */
     all: unset; /* resetea a los estilos por defecto del elemento  */
}

/* de herencia: estas pseudoclases son relacionadas a los elementos hijos de la etiqueta, sin importar que tipo de etiqueta hijo es 

NOTA: es importante dar a notar que el uso de este tipo de pseudoclases seran validas para cualquiera de los elementos que esten detro de una etiqueta*/

.contenedor1 .parrafo:first-child{ /* aplica los estilos al primer hijo */
    background: lightgreen;
}

.contenedor1 .parrafo:last-child{ /* aplica los estilos al ultimo hijo */
    background: limegreen;
}

.contenedor2 .parrafo:nth-child(odd){ /* aplica los estilos a los hijos que son pares */
    background: red;
}

.contenedor2 .parrafo:nth-child(even){/*  aplica los estilos a los hijos impares */
    background: cyan;
}

.contenedor1 .parrafo:nth-child(4){/*  los estilos se aplican al hijo especificado  */ 
    background: maroon;
    color: #f2f2f2;
}

.contenedor1 .parrafo:nth-child(3n){ /* los estilos se aplican a los elementos hijos de la serie especificada. (3n = 0,3,6,9,...) */
    background: mediumturquoise;
}
/* 
:nth-last-child() realiza lo mismo que :nth-child() solo que iniciando desde el el ultimo hijo */

.contenedor .parrafo:only-child{ /* plica los estilos si este es un solo elemeto hijo */
    background: navy;
    color: #f2f2f2;
}

/* Las pseudoclases de tipo son aquellas que lo que buscan son aquellos que son del mismo tipo dependiendo de cual se use sin importar que etiquta sea
    -> :first-of-type
    -> :last-of-type
    -> :nth-last-of-type()
    -> :nth-last-of-type()
    -> :only-of-type
*/

.contenedor .second:nth-of-type(2){
    font-size: 2em;
    background: red;
}

.parrafo:not(.second){
    color: navy;
}

